/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.utp.toolRegistration;

import com.google.appengine.labs.repackaged.org.json.JSONArray;
import com.google.appengine.labs.repackaged.org.json.JSONException;
import com.google.appengine.labs.repackaged.org.json.JSONObject;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.utp.databaseprocess.ToolDetailsProcess;

/**
 *
 * @author Sourav Kumar Paul
 */
public class SubmitToolProfile extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();

        out.print("<html lang=\"en\">\n"
                + "    <head>\n"
                + "        <meta charset=\"utf-8\" />\n"
                + "        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n"
                + "        <title>Tool Profile</title>\n"
                + "\n"
                + "        <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />\n"
                + "        <meta name=\"viewport\" content=\"width=device-width\" />\n"
                + "\n"
                + "        <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" />\n"
                + "        <link href=\"css/gsdk-base.css\" rel=\"stylesheet\" />  \n"
                + "\n"
                + "        <link href=\"http://netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.css\" rel=\"stylesheet\">\n"
                + "\n"
                + "        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\n"
                + "        <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\n"
                + "        \n"
                + "\n"
                + "        <script>\n"
                + "            $(document).ready(function () {\n"
                + "                $('[data-toggle=\"tooltip\"]').tooltip();\n"
                + "            });\n"
                + "        </script>\n"
                + "\n"
                + "\n"
                + "    </head>\n"
                + "\n"
                + "    <body>\n"
                + "        <div>\n"
                + "            <!--   Creative Tim Branding   -->\n"
                + "\n"
                + "\n"
                + "            <!--   Big container   -->\n"
                + "            <div class=\"container\">\n"
                + "                <div class=\"row\">\n"
                + "                    <div >\n"
                + "\n"
                + "                        <!--      Wizard container        -->   \n"
                + "                        <div> \n"
                + "                          \n"
                + "                                <div class=\"card wizard-card ct-wizard-azzure\" id=\"wizard\">\n"
                + "\n"
                + "                                    <!--        You can switch \"ct-wizard-orange\"  with one of the next bright colors: \"ct-wizard-blue\", \"ct-wizard-green\", \"ct-wizard-orange\", \"ct-wizard-red\"             -->\n"
                + "\n"
                + "                                    <div class=\"wizard-header\">\n"
                + "                                        <h3>\n"
                + "                                            <b>Tool</b> Profile Registration <br>\n"
                + "                                            <small>Please let us know about your tool.</small>\n"
                + "                                        </h3>\n"
                + "                                    </div>\n"
                + "                                    <ul>\n"
                + "                                        <li ><a href=\"#about\" data-toggle=\"tab\">Step 1</a></li>\n"
                + "                                        <li class=\"active\"><a  href=\"#account\" data-toggle=\"tab\">Step 2</a></li>\n"
                + "                                        <li ><a href=\"#address\" data-toggle=\"tab\">Step 3</a></li>\n"
                + "                                    </ul>\n"
                + "                                    <div class=\"tab-content\">\n"
                + "                                        <div >\n"
                + "                                            <div class=\"row\">\n"
                + "                                                <div class=\"container\">\n"
                + "                                                    <div class=\"row\">\n"
                + "                                                        <form role=\"form\" action=\"SubmitCapabilityDetails\" method=\"POST\">\n"
                + "                                                            <div class=\"col-lg-6\">\n"
                + "                                                                <div class=\"well well-sm\"><strong><span class=\"glyphicon glyphicon-asterisk\" style=\"color: red\"></span>Required Field</strong></div>\n"
                + "                                                                <div class=\"form-group\">");

        String Version = request.getParameter("Version");
        String Product_Name = request.getParameter("Product_Name");
        String Product_Default_Value = request.getParameter("Product_Default_Value");
        String Product_Key = request.getParameter("Product_Key");
        String Product_Description_Defaultvalue = request.getParameter("Product_Description_Defaultvalue");
        String Tool_Description_Key = request.getParameter("Tool_Description_Key");
        String Product_Version = request.getParameter("Product_Version");
        String Technical_Description_Defaultvalue = request.getParameter("Technical_Description_Defaultvalue");
        String Tool_Technical_Description_Key = request.getParameter("Tool_Technical_Description_Key");
        String Vendor_Name_Defaultvalue = request.getParameter("Vendor_Name_Defaultvalue");
        String Vendor_Name_Key = request.getParameter("Vendor_Name_Key");
        String Vendor_Description_Defaultvalue = request.getParameter("Vendor_Description_Defaultvalue");
        String Vendor_Description_Key = request.getParameter("Vendor_Description_Key");
        String Website = request.getParameter("Website");
        String Contact = request.getParameter("Contact");
        String Support_Team = request.getParameter("Support_Team");
        String Service_Provider_Name_Defaultvalue = request.getParameter("Service_Provider_Name_Defaultvalue");
        String Service_Provider_Name_Key = request.getParameter("Service_Provider_Name_Key");
        String Service_Provider_Description_Defaultvalue = request.getParameter("Service_Provider_Description_Defaultvalue");
        String Service_Provider_Description_Key = request.getParameter("Service_Provider_Description_Key");
        String Service_Provider_Support = request.getParameter("Service_Provider_Support");
        String Service_Owner_Name_Defaultvalue = request.getParameter("Service_Owner_Name_Defaultvalue");
        String Service_Owner_Name_Key = request.getParameter("Service_Owner_Name_Key");
        String Service_Owner_Description_Defaultvalue = request.getParameter("Service_Owner_Description_Defaultvalue");
        String Service_Owner_Description_Key = request.getParameter("Service_Owner_Description_Key");
        String Service_Owner_guid = request.getParameter("Service_Owner_guid");
        String lti_path = request.getParameter("lti_path");
        String lti_message_type = request.getParameter("message_type");
        String Capability_Wanted[] = request.getParameterValues("Capability_Offered");
        String Services_Wanted[] = request.getParameterValues("Services_Offered");
        String Tool_Url = request.getParameter("Tool_Url");
        String Vendor_Code = request.getParameter("Vendor_Code");
        String Product_id = request.getParameter("Product_id");
        String Product_Code = request.getParameter("Product_Code");
        String Service_Provider_guid = request.getParameter("Service_Provider_guid");
        String Resourse_Type_Code = request.getParameter("Resourse_Type_Code");
        String Resourse_Name_DefaultValue = request.getParameter("Resourse_Name_DefaultValue");
        String Resourse_Name_DefaultKey = request.getParameter("Resourse_Name_DefaultKey");
        String Resourse_Description_DefaultValue = request.getParameter("Resourse_Description_DefaultValue");
        String Resourse_Description_DefaultKey = request.getParameter("Resourse_Description_DefaultKey");
        String Number_of_Required_Custom_Parameters = request.getParameter("Number_of_Required_Custom_Parameters");
        String Number_of_Optional_Custom_Parameters = request.getParameter("Number_of_Optional_Custom_Parameters");
        JSONObject toolProfile = null;
        try {
            Calendar calendar = Calendar.getInstance();
            java.util.Date now = calendar.getTime();
            java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(now.getTime());
            toolProfile = new JSONObject()
                    .put("lti_version", "LTI-2p0")
                    .put("product_instance", new JSONObject()
                            .put("product_info", new JSONObject()
                                    .put("product_name", new JSONObject().put("default_value", Product_Default_Value)
                                            .put("key", Product_Key))
                                    .put("product_version", Product_Version)
                                    .put("description", new JSONObject().put("default_value", Product_Description_Defaultvalue)
                                            .put("key", Tool_Description_Key))
                                    .put("technical_description", new JSONObject().put("default_value", Technical_Description_Defaultvalue)
                                            .put("key", Tool_Technical_Description_Key))
                                    .put("product_family", new JSONObject()
                                            .put("@id", Product_id)
                                            .put("code", Product_Code)
                                            .put("vendor", new JSONObject()
                                                    .put("code", Vendor_Code)
                                                    .put("vendor_name", new JSONObject().put("default_value", Vendor_Name_Defaultvalue)
                                                            .put("key", Vendor_Name_Key))
                                                    .put("description", new JSONObject().put("default_value", Vendor_Description_Defaultvalue)
                                                            .put("key", Vendor_Description_Key))
                                                    .put("website", Website)
                                                    .put("timestamp", currentTimestamp)
                                                    .put("contact", new JSONObject().put("email", Contact)))))
                            .put("support", new JSONObject().put("email", Support_Team))
                            .put("service_provider", new JSONObject()
                                    .put("guid", Service_Provider_guid)
                                    .put("timestamp", currentTimestamp)
                                    .put("service_provider_name", new JSONObject().put("default_value", Service_Provider_Name_Defaultvalue)
                                            .put("key", Service_Provider_Name_Key)))
                            .put("description", new JSONObject().put("default_value", Service_Provider_Description_Defaultvalue)
                                    .put("key", Service_Provider_Description_Key))
                            .put("service_owner", new JSONObject()
                                    .put("guid", Service_Owner_guid)
                                    .put("timestamp", currentTimestamp)
                                    .put("description", new JSONObject().put("default_value", Service_Owner_Description_Defaultvalue)
                                            .put("key", Service_Owner_Description_Key))
                                    .put("service_owner_name", new JSONObject().put("default_value", Service_Owner_Name_Defaultvalue)
                                            .put("key", Service_Owner_Name_Key))))
                    .put("base_url_choice", new JSONArray()
                            .put(new JSONObject()
                                    .put("selector", "DefaultSelector")
                                    .put("default_base_url", "http://")
                                    .put("secure_base_url", "https://")))
                    .put("Capability_Wanted", Capability_Wanted)
                    .put("Services_Wanted", Services_Wanted)
                    .put("message_type", new JSONObject().put("path", lti_path)
                            .put("message_type", lti_message_type))
                    .put("resource_type", new JSONObject().put("code", Resourse_Type_Code))
                    .put("resource_name", new JSONObject().put("default_value", Resourse_Name_DefaultValue)
                            .put("key", Resourse_Name_DefaultKey))
                    .put("description", new JSONObject().put("default_value", Resourse_Description_DefaultValue)
                            .put("key", Resourse_Description_DefaultKey))
                    .put("Tool_Url", Tool_Url);
        } catch (Exception e) {

        }
        ToolDetailsProcess db = new ToolDetailsProcess();
        int id = -1;
        try {
            id = db.insert(toolProfile.toString());
        } catch (JSONException ex) {
            Logger.getLogger(SubmitToolProfile.class.getName()).log(Level.SEVERE, null, ex);
        }
        String url12[] = new String[2];
        StringBuffer base_url = request.getRequestURL();

        base_url.delete(base_url.indexOf("utp2p0"), base_url.length());

        url12[0] = base_url + "utp2p0/lti/register/" + id;
        url12[1] = base_url + "utp2p0/lti/launch/" + id;
        
        ToolDetailsProcess registration = new ToolDetailsProcess();
        registration.insertRegisteredUrl(url12[0], id);
        registration.insertLaunchUrl(url12[1], id);

        JSONArray jsonCapability = new JSONArray();

        for (int i = 0; i < Capability_Wanted.length; i++) {
            jsonCapability.put(Capability_Wanted[i]);
        }

        JSONArray jsonUrl = new JSONArray();

        for (int i = 0; i < url12.length; i++) {
            jsonUrl.put(url12[i]);
        }

        for (int i = 0; i < jsonCapability.length(); i++) {
            try {
                out.print("<div class=\"container\">\n"
                        + "                                    <h2>" + jsonCapability.getString(i) + "</h2>\n"
                        + "                                    <div class=\"panel panel-default\">\n"
                        + "                                        <div class=\"panel-body\">\n"
                        + "                                            <div class=\"form-group\" style=\"margin-left: 30pt;\";\">\n"
                        + "                                                <label for=\"InputName\" data-toggle=\"tooltip\" data-placement=\"right\"  title=\"Enter variable name. This variable name will be used by LMS to send parameters. eg., membership_role\"><b>Name  </b><img src=\"Design/images/QuestionMark.jpg\"></label>\n"
                        + "                                                <div class=\"input-group\">\n"
                        + "                                                    <input type=\"text\" class=\"form-control\" name=\"" + jsonCapability.getString(i) + "/Name\" id=\"InputName\" placeholder=\"\" required>\n"
                        + "                                                    <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-asterisk\" style=\"color: red\"></span></span>\n"
                        + "                                                </div>\n"
                        + "                                            </div>\n"
                        + "                                            <div class=\"form-group\" style=\"margin-left: 30pt;\";\">\n"
                        + "                                                <label for=\"InputName\"><b>Variable  </b></label>\n"
                        + "                                                <div class=\"input-group\">\n"
                        + "                                                    <input type=\"text\" class=\"form-control\" name=\"" + jsonCapability.getString(i) + "/Variable\" value=\"" + jsonCapability.getString(i) + "\" readonly =\"readonly\" id=\"InputName\" placeholder=\"\" required>\n"
                        + "                                                    <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-asterisk\" style=\"color: red\"></span></span>\n"
                        + "                                                </div>\n"
                        + "                                            </div>\n"
                        + "                                        </div>\n"
                        + "                                    </div>\n"
                        + "                                </div>");
            } catch (JSONException ex) {
                Logger.getLogger(SubmitToolProfile.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        int custom_required_parameters = Integer.parseInt(Number_of_Required_Custom_Parameters);
        if (custom_required_parameters > 0) {
            out.print("<div class=\"container\">\n"
                    + "                                                                        <h3 ><b>Custom Required Parameters  </b></h3>\n"
                    + "                                                                        <div class=\"panel panel-default\">\n"
                    + "                                                                            <div class=\"panel-body\">");
            System.out.println("custom : " + custom_required_parameters);
            for (int i = 1; i <= custom_required_parameters; i++) {
                out.print("<div class=\"form-group\" style=\"margin-left: 30pt;\";\">\n"
                        + "                                                                                    <label for=\"InputName\" data-toggle=\"tooltip\" data-placement=\"top\"  title=\"These custom parameters are required and will always submitted by tool consumer. Custom parameters are always fetched by using 'custom_' keyword before parameter name.\"><b>Parameter " + i + "  </b><img src=\"Design/images/QuestionMark.jpg\"></label>\n"
                        + "                                                                                    <div class=\"input-group\">\n"
                        + "                                                                                        <input type=\"text\" class=\"form-control\" name=\"Required_Parameter" + i + "\" id=\"InputName\" placeholder=\"\" required>\n"
                        + "                                                                                        <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-asterisk\" style=\"color: red\"></span></span>\n"
                        + "                                                                                    </div>\n"
                        + "                                                                                </div>");
            }

            out.print("</div>\n"
                    + "                                                                        </div>\n"
                    + "                                                                    </div>");
        }
        int custom_optional_parameters = Integer.parseInt(Number_of_Optional_Custom_Parameters);
        if (custom_optional_parameters > 0) {
            out.print("<div class=\"container\">\n"
                    + "                                                                        <h3 ><b>Custom Optional Parameters  </b></h3>\n"
                    + "                                                                        <div class=\"panel panel-default\">\n"
                    + "                                                                            <div class=\"panel-body\">");

            System.out.println("custom : " + custom_optional_parameters);
            for (int i = 1; i <= custom_optional_parameters; i++) {
                out.print("<div class=\"form-group\" style=\"margin-left: 30pt;\";\">\n"
                        + "                                                                                    <label for=\"InputName\" data-toggle=\"tooltip\" data-placement=\"right\"  title=\"These custom parameters are optional. Tool Consumer may or may not send this parameters. Custom parameters are always fetched by using 'custom_' keyword before parameter name.\"><b>Parameter " + i + "  </b><img src=\"Design/images/QuestionMark.jpg\"></label>\n"
                        + "                                                                                    <div class=\"input-group\">\n"
                        + "                                                                                        <input type=\"text\" class=\"form-control\" name=\"Optional_Parameter" + i + "\" id=\"InputName\" placeholder=\"\" required>\n"
                        + "                                                                                        <span class=\"input-group-addon\"><span class=\"glyphicon glyphicon-asterisk\" style=\"color: red\"></span></span>\n"
                        + "                                                                                    </div>\n"
                        + "                                                                                </div>");

            }
            out.print("</div>\n"
                    + "                                                                        </div>\n"
                    + "                                                                    </div>");

        }

        out.print("                                                    <input type=\"hidden\" class=\"form-control\" name=\"" + "registerUrl" + "\" value = \"" + url12[0] + "\" id=\"InputName\" placeholder=\"\" required>\n"
                + "                                                    <input type=\"hidden\" class=\"form-control\" name=\"" + "launchUrl" + "\" value = \"" + url12[1] + "\" id=\"InputName\" placeholder=\"\" required>\n"
                + "                                                    <input type=\"hidden\" class=\"form-control\" name=\"" + "size" + "\" value = \"" + Capability_Wanted.length + "\" id=\"InputName\" placeholder=\"\" required>\n"
                + "                                                    <input type=\"hidden\" class=\"form-control\" name=\"" + "required_parameters_size" + "\" value = \"" + custom_required_parameters + "\" id=\"InputName\" placeholder=\"\" required>\n"
                + "                                                    <input type=\"hidden\" class=\"form-control\" name=\"" + "optional_parameters_size" + "\" value = \"" + custom_optional_parameters + "\" id=\"InputName\" placeholder=\"\" required>\n"
        );
        out.print(" <input type=\"submit\" name=\"submit\" id=\"submit\" value=\"Next\" class=\"btn btn-info pull-right\">\n"
                + "                                                                </div>\n"
                + "\n"
                + "                                                            </div>\n"
                + "                                                        </form>\n"
                + "\n"
                + "                                                    </div>\n"
                + "                                                    <!-- Registration form - END -->\n"
                + "\n"
                + "                                                </div>\n"
                + "                                            </div>\n"
                + "                                        </div>\n"
                + "\n"
                + "\n"
                + "\n"
                + "\n"
                + "                                        \n"
                + "                                </div>\n"
                + "                           \n"
                + "                        </div> <!-- wizard container -->\n"
                + "                    </div>\n"
                + "                </div><!-- end row -->\n"
                + "            </div> <!--  big container -->\n"
                + "\n"
                + "\n"
                + "\n"
                + "\n"
                + "\n"
                + "\n"
                + "\n"
                + "        </div>\n"
                + "\n"
                + "    </body>\n"
                + "\n"
                + "    <script src=\"js/jquery-1.10.2.js\" type=\"text/javascript\"></script>\n"
                + "    <script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>\n"
                + "\n"
                + "    <!--   plugins 	 -->\n"
                + "    <script src=\"js/jquery.bootstrap.wizard.js\" type=\"text/javascript\"></script>\n"
                + "    <script src=\"js/wizard.js\"></script>\n"
                + "\n"
                + "</html>");
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
